1. Какие уровни входят в модель OSI и за что они отвечают?

1) как передать данные по байтикам (на какой частоте, на каком напряжении):
физический: среда (провод, волна, частота импульсов)
канальный: устройства

2) нужно найти адресата и доставить до него:
internet
протокол -- IP

3) доставили до адресата и ищем какому приложению он должен быть направлен:
transport
протокол -- port

4) 
session: задача синхронизации и шифрования
representaition: что представляют из себя данные (картинка, текст)
application: интерпретация




2. Основные особенности протоколов  TCP и UDP

пакет может измениться, потеряться, продублироваться, нарушение порядка

UDP (universal data protocol): ну и ладно, главное доставить
"лови - я держу" (я собираюсь переслать 100 байтов - я собираюсь прочитать 100 байтов)
+ быстрый; 
- особой связи нет (бумажный самолетик)

TCP (transport control protocol): важна надежность, а не скорость; 
если что-то не так, то попросить еще раз; 
передает не дата-граммы, а потоки; пока весь поток не заполнится, 
весь поток не будет прочитан
+ вы и только вы общаетесь, похоже на телефонную связь; гарантирует, 
    что пакеты будут доставлены, порядок сохранен, и все хорошо
- соответственно, медленный. 




3. Какие данные необходимы для сетевого взаимодействия?
(IP, port) -- end point (точка доступа)




4. Какие функции выполняют пассивные и активные сокеты?

socket -- псевдо файл, можно писать/читать, как файл
он привязан к (IP, port)

пассивные: (слушатель, acceptor) чтобы принять соединение (слушает, 
не стучится ли к нему кто-нибудь, и отправляет к активному сокету)
проверяет, что все нормально с соединением

активные: читаем, пишем (обмен данными)




5. Как устанавливается логическое соединение TCP?

server:
пассивный сокет (acceptor) - (acceptor.bind(endpoint)) - 
режим прослушки (acceptor.listen(size)) - активный (socket) - 
соединение (acceptor.accept(socket))

client:
socket.connect



