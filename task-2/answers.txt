1. std::pair
Можно хранить координаты XY, имя-фамилию, фамилию-возраст и тд.
std::tuple
Для хранения данных. Позволяет работать с функциями, 
возвращающими более одного значения. 

2. std::array
Когда нужен статический массив.

3. std::vector
Когда нужен динамический массив.

4. std::deque
В деках динамический массив открыт с двух сторон. Это позволяет 
быстро добавлять новые элементы как в конец, так и в начало 
контейнера.

5. std::list
Список нужен для хранения, быстрого добавления/удаления и 
возможности прохода по всем элементам.
Нет произвольного доступа ко всем элементам.

6. std::forward_list
Поддерживает быструю вставку и удаление элементов из любой 
точки контейнера. Быстрый произвольный доступ не поддерживается.
По сравнению с std::list этим контейнером обеспечивается 
более эффективное хранение, когда двунаправленная итерация 
не требуется.

7. В стандартной библиотеке есть 
std::stack
std::queue
std::priority_queue

8. circular buffer из Boost
Используют для организации различных очередей сообщений и 
буферов приёма-передачи различных коммуникационных интерфейсов, 
для очереди с фиксированным максимальным размером.

9. Circular buffer из Boost не может войти в стандарт, так как 
в стандарте есть правило, что адрес начала должен быть меньше 
адреса конца.

10. 
boost::multi_array --  это шаблон контейнера. При создании 
экземпляра он выделяет пространство для количества элементов, 
соответствующих размерам, указанным во время строительства.
boost::multi_array_ref -- адаптирует существующий массив данных 
для обеспечения интерфейса multi_array . multi_array_ref 
не владеет переданными ему данными.
boost::const_multi_array_ref -- аналогичен multi_array_ref, 
но гарантирует неизменность содержимого массива.
