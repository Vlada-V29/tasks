1. Какие средства используются для организации межпроцессного взаимодействия?
    kernel. 
	shared memory (разделяемая память). 
	memory maped file (файлы, отображаемые в память). 

2. Чем файлы, отображаемые в память, отличаются от разделяемой памяти?
 - хранятся не в ОЗУ, т.е. медленные
 - могут не удалиться
 - нужно будет периодически сбрасывать данные
 - энергонезависимость
 - сторонняя программа может открыть


3. Что необходимо учитывать при создании контейнеров в разделяемой памяти? 
Нам не известно раположение контейнера в памяти, а элементы не обязательно 
последовательны. Поэтому надо использовать аллокатор (boost::interprocess::allocator), 
который позволяет положить контейнер в разделяемую память.


4. Чем отличаются анонимные и именованные механизмы синхронизации? 
Именнованные живут внитри операционной системы, внутри ядра.
Анонимные - в разделяемой памяти.


5. Как могут быть использованы библиотеки динамической компоновки DLL?
Исходный файл разделяется на кусочки (динамические библиотеки). 
Затем по мере необходимости загружаем их в область запускаемого файла. 
И не происходит раздувания.


